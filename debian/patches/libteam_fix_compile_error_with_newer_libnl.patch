From 796a49d182714db4d6f6f92f97cdcbaa5155187d Mon Sep 17 00:00:00 2001
From: Jiri Pirko <jiri@resnulli.us>
Date: Mon, 5 Oct 2015 14:18:46 +0200
Subject: libteam: fix compile error with newer libnl

libnl broke my assumption that all signed netlink types will be added in
one commit. So fix this by checking for every type individually.

Signed-off-by: Jiri Pirko <jiri@resnulli.us>

diff --git a/libteam/nl_updates.h b/libteam/nl_updates.h
index 6e77c39..8f442a3 100644
--- a/libteam/nl_updates.h
+++ b/libteam/nl_updates.h
@@ -27,14 +27,7 @@
 #endif
 
 #ifndef NLA_S8
-/*
- * Presume that libnl will add all types and relevant puts/gets at once
- * so check only for NLA_S8.
- */
 #define NLA_S8 12
-#define NLA_S16 13
-#define NLA_S32 14
-#define NLA_S64 15
 
 /**
  * Add 8 bit signed integer attribute to netlink message.
@@ -51,6 +44,15 @@ static inline int nla_put_s8(struct nl_msg *msg, int attrtype, int8_t value)
 }
 
 /**
+ * Add 8 bit signed integer attribute to netlink message.
+ * @arg msg		Netlink message.
+ * @arg attrtype	Attribute type.
+ * @arg value		Numeric value.
+ */
+#define NLA_PUT_S8(msg, attrtype, value) \
+	NLA_PUT_TYPE(msg, int8_t, attrtype, value)
+
+/**
  * Return value of 8 bit signed integer attribute.
  * @arg nla		8 bit signed integer attribute
  *
@@ -61,6 +63,11 @@ int8_t nla_get_s8(struct nlattr *nla)
 	return *(int8_t *) nla_data(nla);
 }
 
+#endif /* NLA_S8 */
+
+#ifndef NLA_S16
+#define NLA_S16 13
+
 /**
  * Add 16 bit signed integer attribute to netlink message.
  * @arg msg		Netlink message.
@@ -76,6 +83,15 @@ int nla_put_s16(struct nl_msg *msg, int attrtype, int16_t value)
 }
 
 /**
+ * Add 16 bit signed integer attribute to netlink message.
+ * @arg msg		Netlink message.
+ * @arg attrtype	Attribute type.
+ * @arg value		Numeric value.
+ */
+#define NLA_PUT_S16(msg, attrtype, value) \
+	NLA_PUT_TYPE(msg, int16_t, attrtype, value)
+
+/**
  * Return payload of 16 bit signed integer attribute.
  * @arg nla		16 bit signed integer attribute
  *
@@ -86,6 +102,11 @@ int16_t nla_get_s16(struct nlattr *nla)
 	return *(int16_t *) nla_data(nla);
 }
 
+#endif /* NLA_S16 */
+
+#ifndef NLA_S32
+#define NLA_S32 14
+
 /**
  * Add 32 bit signed integer attribute to netlink message.
  * @arg msg		Netlink message.
@@ -101,6 +122,15 @@ int nla_put_s32(struct nl_msg *msg, int attrtype, int32_t value)
 }
 
 /**
+ * Add 32 bit signed integer attribute to netlink message.
+ * @arg msg		Netlink message.
+ * @arg attrtype	Attribute type.
+ * @arg value		Numeric value.
+ */
+#define NLA_PUT_S32(msg, attrtype, value) \
+	NLA_PUT_TYPE(msg, int32_t, attrtype, value)
+
+/**
  * Return payload of 32 bit signed integer attribute.
  * @arg nla		32 bit signed integer attribute.
  *
@@ -111,6 +141,11 @@ int32_t nla_get_s32(struct nlattr *nla)
 	return *(int32_t *) nla_data(nla);
 }
 
+#endif /* NLA_S32 */
+
+#ifndef NLA_S64
+#define NLA_S64 15
+
 /**
  * Add 64 bit signed integer attribute to netlink message.
  * @arg msg		Netlink message.
@@ -126,33 +161,6 @@ int nla_put_s64(struct nl_msg *msg, int attrtype, int64_t value)
 }
 
 /**
- * Add 8 bit signed integer attribute to netlink message.
- * @arg msg		Netlink message.
- * @arg attrtype	Attribute type.
- * @arg value		Numeric value.
- */
-#define NLA_PUT_S8(msg, attrtype, value) \
-	NLA_PUT_TYPE(msg, int8_t, attrtype, value)
-
-/**
- * Add 16 bit signed integer attribute to netlink message.
- * @arg msg		Netlink message.
- * @arg attrtype	Attribute type.
- * @arg value		Numeric value.
- */
-#define NLA_PUT_S16(msg, attrtype, value) \
-	NLA_PUT_TYPE(msg, int16_t, attrtype, value)
-
-/**
- * Add 32 bit signed integer attribute to netlink message.
- * @arg msg		Netlink message.
- * @arg attrtype	Attribute type.
- * @arg value		Numeric value.
- */
-#define NLA_PUT_S32(msg, attrtype, value) \
-	NLA_PUT_TYPE(msg, int32_t, attrtype, value)
-
-/**
  * Add 64 bit signed integer attribute to netlink message.
  * @arg msg		Netlink message.
  * @arg attrtype	Attribute type.
@@ -176,6 +184,6 @@ int64_t nla_get_s64(struct nlattr *nla)
 	return tmp;
 }
 
-#endif
+#endif /* NLA_S64 */
 
 #endif /* _NL_UPDATES_H_ */
